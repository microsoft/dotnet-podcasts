name: Podcast Web CICD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  API_RESOURCE_NAME: podcastapica

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  deployStaging:
    name: Deploy to staging
    needs: build
    environment:
      name: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  testE2E:
    name: Run Playwright E2E tests
    needs: deployStaging
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.25.2-focal
    env:
      BASEURL: https://${{secrets.WEBAPP_NAME}}.azurewebsites.net # sets value for URL to test
      AADUSERNAME: ${{secrets.AADUSERNAME}} # sets value for AAD creds
      AADPASSWORD: ${{secrets.AADPASSWORD}}
    defaults:
      run:
        working-directory: src/Web/E2E
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install msedge

      - name: Run Playwright tests
        run: |
          HOME=/root npx playwright test

      - name: Create test summary
        uses: test-summary/action@dist
        if: always()
        with:
          paths: src/Web/E2E/test-results/junit.xml

      - name: Upload HTML report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: src/Web/E2E/playwright-report/
          retention-days: 30

  testLoad:
    name: Run Load Tests
    needs: testE2E
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      ENVIRONMENTNAME: test
    steps:
      - uses: actions/checkout@v3

      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Podcast CICD Load Test"
        uses: azure/load-testing@v1
        with:
            loadTestConfigFile: "src/Web/LoadTests/config.yaml"
            loadTestResource: TestPodcastLoadTestQT1
            resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
   
  deployProd:
    name: Deploy to production
    needs: testLoad
    environment:
      name: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
