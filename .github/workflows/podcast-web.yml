name: Podcast Web CICD

on:
  workflow_dispatch: # allow workflow to be manually triggered

  push:
    branches: [main]
    paths:
      - 'src/Web/**'
      - '.github/workflows/podcast-web.yml'
      - 'deploy/Web/web.bicep'

  pull_request:
    branches: [main]
    paths:
      - 'src/Web/**'
      - '.github/workflows/podcast-web.yml'

env:
  API_RESOURCE_NAME: podcastapica
  AZURE_RESOURCE_GROUP_NAME: Podcast002

jobs:
  config:
    name: Get Configuration
    uses: ./.github/workflows/environment-config.yml

  # build and publish the web project and upload it as an artifact
  build:
    name: Build Web App
    runs-on: ubuntu-latest

    needs: config
    environment:
      name: ${{ needs.config.outputs.type }}
    env:
      LISTEN_TOGETHER_HUB_URL: https://hub-${{ needs.config.outputs.name_clean }}.azurewebsites.net/listentogether

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Install wasm-tools
        run: dotnet workload install wasm-tools

      - name: Login to Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set backend env variables
        run: |
          az extension add --name containerapp
          fqdn=$( az containerapp show -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.API_RESOURCE_NAME }} -o tsv --query properties.configuration.ingress.fqdn )
          echo "PODCAST_API_URL=https://$fqdn" >> $GITHUB_ENV

      - name: Set Blazor WASM app settings
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/Web/Client/wwwroot/appsettings.json'
        env:
          PodcastApi.BaseAddress: ${{ env.PODCAST_API_URL }}
          ListenTogetherHub: ${{ env.LISTEN_TOGETHER_HUB_URL }}

      - name: Build
        run: dotnet build src/Web/Server --configuration Release

      - name: Publish
        run: dotnet publish --configuration Release src/Web/Server --output web

      - uses: actions/upload-artifact@v3
        with:
          name: drop
          path: web

    outputs:
      PodcastApiUrl: ${{ env.PODCAST_API_URL }}
      ListenTogetherHubUrl: ${{ env.LISTEN_TOGETHER_HUB_URL }}

  # deploy the web resources including a web app, then deploy the web's source (from the build artifact) to the app
  deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest

    needs:
      - config
      - build
    environment:
      name: ${{ needs.config.outputs.type }}

    env:
      WEBAPP_NAME: web-${{ needs.config.outputs.name_clean }}

    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy Web App
        run: az deployment group create -n ghaction -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -f deploy/Web/web.bicep -p name=${{ env.WEBAPP_NAME }}

      - name: Download web artifacts
        uses: actions/download-artifact@v3
        with:
          name: drop
          path: web

      - name: Update App Service app settings variables
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          app-settings-json: |
            [
                {
                    "name": "PodcastApi__BaseAddress",
                    "value": "${{ needs.build.outputs.PodcastApiUrl }}"
                },
                {
                    "name": "ListenTogetherHub",
                    "value": "${{ needs.build.outputs.ListenTogetherHubUrl }}"
                }
            ]

      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          package: web

  # # test the deployment
  # test:
  #   runs-on: ubuntu-latest
  #   container: mcr.microsoft.com/playwright:v1.26.0-focal

  #   needs: deploy
  #   timeout-minutes: 60

  #   env:
  #     BASEURL: https://${{ env.WEBAPP_NAME_STAGING }}.azurewebsites.net # sets value for URL to test

  #   defaults:
  #     run:
  #       working-directory: src/Web/E2E

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'

  #     - name: Install dependencies
  #       run: |
  #         npm ci
  #         npx playwright install msedge

  #     - name: Run Playwright tests
  #       run: |
  #         HOME=/root npx playwright test

  #     - name: Create test summary
  #       uses: test-summary/action@dist
  #       if: always()
  #       with:
  #         paths: src/Web/E2E/test-results/junit.xml

  #     - name: Upload HTML report
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: src/Web/E2E/playwright-report/
  #         retention-days: 30
