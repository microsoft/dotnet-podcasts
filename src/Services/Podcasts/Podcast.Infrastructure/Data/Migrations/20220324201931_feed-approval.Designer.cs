// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Podcast.Infrastructure.Data;

#nullable disable

namespace Podcast.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PodcastDbContext))]
    [Migration("20220324201931_feed-approval")]
    partial class feedapproval
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527"),
                            Genre = "Community"
                        },
                        new
                        {
                            Id = new Guid("5f923017-86da-4793-9332-7b74197acc51"),
                            Genre = "Microsoft"
                        },
                        new
                        {
                            Id = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7"),
                            Genre = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("7322b307-1431-4203-bda8-9161b60c45d0"),
                            Genre = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("bee871ad-750b-400b-91b0-c34056c92297"),
                            Genre = "M365"
                        },
                        new
                        {
                            Id = new Guid("4d41bc8e-ef5e-439f-80fa-5e9873ea7a4a"),
                            Genre = "Web"
                        });
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Explicit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Published")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Feed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Feeds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5660e7b9-7555-4d3f-b863-df658440820b"),
                            IsFeatured = false,
                            Url = "http://feeds.codenewbie.org/cnpodcast.xml"
                        },
                        new
                        {
                            Id = new Guid("cbab58bb-fa24-46b9-b68d-ee25ddefb1a6"),
                            IsFeatured = false,
                            Url = "https://feeds.fireside.fm/mergeconflict/rss"
                        },
                        new
                        {
                            Id = new Guid("bcb81fd8-ab1d-4874-af23-35513d3d673d"),
                            IsFeatured = false,
                            Url = "https://msdevshow.libsyn.com/rss"
                        },
                        new
                        {
                            Id = new Guid("5ebb45a0-5fff-49ac-a5d5-691e6314ce71"),
                            IsFeatured = false,
                            Url = "https://thedotnetcorepodcast.libsyn.com/rss"
                        },
                        new
                        {
                            Id = new Guid("71a2df8c-cb34-4203-b045-375695439b8b"),
                            IsFeatured = false,
                            Url = "https://devchat.tv/podcasts/adventures-in-dotnet/feed/"
                        },
                        new
                        {
                            Id = new Guid("5fb313f5-ca48-49cd-a9bd-7ea830cfa984"),
                            IsFeatured = false,
                            Url = "https://feeds.simplecast.com/gvtxUiIf"
                        },
                        new
                        {
                            Id = new Guid("54179124-9094-4091-9891-f29868298575"),
                            IsFeatured = true,
                            Url = "http://feeds.gimletcreative.com/dotfuture"
                        },
                        new
                        {
                            Id = new Guid("bc2cab2b-d6f4-48ae-9602-3041a55ee6be"),
                            IsFeatured = false,
                            Url = "https://feeds.fireside.fm/gonemobile/rss"
                        },
                        new
                        {
                            Id = new Guid("c843a675-02a4-46c7-aea1-a78fd98d7c7a"),
                            IsFeatured = true,
                            Url = "https://feeds.fireside.fm/xamarinpodcast/rss"
                        },
                        new
                        {
                            Id = new Guid("6d6b95a4-88f8-4e52-bacd-362c0024362c"),
                            IsFeatured = false,
                            Url = "https://microsoftmechanics.libsyn.com/rss"
                        },
                        new
                        {
                            Id = new Guid("1d9a5366-4258-4355-9a04-80680d12e05c"),
                            IsFeatured = false,
                            Url = "https://www.m365devpodcast.com/feed.xml"
                        },
                        new
                        {
                            Id = new Guid("2a57fb68-8755-4d9a-a6ee-86bf106d7874"),
                            IsFeatured = false,
                            Url = "http://www.pwop.com/feed.aspx?show=dotnetrocks&filetype=master"
                        },
                        new
                        {
                            Id = new Guid("c2b49169-0bb5-444a-86a4-14a476cf7620"),
                            IsFeatured = false,
                            Url = "https://feeds.simplecast.com/cRTTfxcT"
                        },
                        new
                        {
                            Id = new Guid("fa3da5bc-805e-401e-a590-f57776712170"),
                            IsFeatured = false,
                            Url = "https://intrazone.libsyn.com/rss"
                        },
                        new
                        {
                            Id = new Guid("7941709e-dbd5-4d04-8c90-e304a4645005"),
                            IsFeatured = false,
                            Url = "https://upwards.libsyn.com/rss"
                        },
                        new
                        {
                            Id = new Guid("57da3b70-bdfc-454e-81f0-fb4ee7ba68d3"),
                            IsFeatured = true,
                            Url = "https://s.ch9.ms/Shows/Hello-World/feed/mp3"
                        },
                        new
                        {
                            Id = new Guid("89a51256-4674-4a11-8f2a-bd44ce325d14"),
                            IsFeatured = false,
                            Url = "https://listenbox.app/f/NRGnlt0wQqB7"
                        },
                        new
                        {
                            Id = new Guid("7dd803ce-d834-4ae2-8f37-6f6e0d1977cc"),
                            IsFeatured = false,
                            Url = "https://nullpointers.io/feed/podcast.rss"
                        },
                        new
                        {
                            Id = new Guid("76c2dd2f-7232-4842-9808-f6a389de510e"),
                            IsFeatured = false,
                            Url = "http://awayfromthekeyboard.com/feed/"
                        },
                        new
                        {
                            Id = new Guid("da5fb742-7ceb-40cc-ac17-2d46253de3f9"),
                            IsFeatured = false,
                            Url = "https://feeds.buzzsprout.com/978640.rss"
                        },
                        new
                        {
                            Id = new Guid("a8791dd6-0ad8-48b7-b66e-8c6d67719626"),
                            IsFeatured = false,
                            Url = "http://feeds.feedburner.com/NoDogmaPodcast"
                        },
                        new
                        {
                            Id = new Guid("e2a825f2-1a5e-4b54-94dd-1544511349ab"),
                            IsFeatured = false,
                            Url = "https://feeds.soundcloud.com/users/soundcloud:users:941029057/sounds.rss"
                        });
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.FeedCategory", b =>
                {
                    b.Property<Guid>("FeedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeedId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("FeedCategory");

                    b.HasData(
                        new
                        {
                            FeedId = new Guid("5660e7b9-7555-4d3f-b863-df658440820b"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("bc2cab2b-d6f4-48ae-9602-3041a55ee6be"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("c843a675-02a4-46c7-aea1-a78fd98d7c7a"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("c843a675-02a4-46c7-aea1-a78fd98d7c7a"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("c843a675-02a4-46c7-aea1-a78fd98d7c7a"),
                            CategoryId = new Guid("7322b307-1431-4203-bda8-9161b60c45d0")
                        },
                        new
                        {
                            FeedId = new Guid("6d6b95a4-88f8-4e52-bacd-362c0024362c"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("1d9a5366-4258-4355-9a04-80680d12e05c"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("1d9a5366-4258-4355-9a04-80680d12e05c"),
                            CategoryId = new Guid("bee871ad-750b-400b-91b0-c34056c92297")
                        },
                        new
                        {
                            FeedId = new Guid("bc2cab2b-d6f4-48ae-9602-3041a55ee6be"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("2a57fb68-8755-4d9a-a6ee-86bf106d7874"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("fa3da5bc-805e-401e-a590-f57776712170"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("7941709e-dbd5-4d04-8c90-e304a4645005"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("57da3b70-bdfc-454e-81f0-fb4ee7ba68d3"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("89a51256-4674-4a11-8f2a-bd44ce325d14"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("7dd803ce-d834-4ae2-8f37-6f6e0d1977cc"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("76c2dd2f-7232-4842-9808-f6a389de510e"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("da5fb742-7ceb-40cc-ac17-2d46253de3f9"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("c2b49169-0bb5-444a-86a4-14a476cf7620"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("a8791dd6-0ad8-48b7-b66e-8c6d67719626"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("54179124-9094-4091-9891-f29868298575"),
                            CategoryId = new Guid("5f923017-86da-4793-9332-7b74197acc51")
                        },
                        new
                        {
                            FeedId = new Guid("5fb313f5-ca48-49cd-a9bd-7ea830cfa984"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("cbab58bb-fa24-46b9-b68d-ee25ddefb1a6"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("cbab58bb-fa24-46b9-b68d-ee25ddefb1a6"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("cbab58bb-fa24-46b9-b68d-ee25ddefb1a6"),
                            CategoryId = new Guid("7322b307-1431-4203-bda8-9161b60c45d0")
                        },
                        new
                        {
                            FeedId = new Guid("cbab58bb-fa24-46b9-b68d-ee25ddefb1a6"),
                            CategoryId = new Guid("bee871ad-750b-400b-91b0-c34056c92297")
                        },
                        new
                        {
                            FeedId = new Guid("bcb81fd8-ab1d-4874-af23-35513d3d673d"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("bcb81fd8-ab1d-4874-af23-35513d3d673d"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("bcb81fd8-ab1d-4874-af23-35513d3d673d"),
                            CategoryId = new Guid("7322b307-1431-4203-bda8-9161b60c45d0")
                        },
                        new
                        {
                            FeedId = new Guid("bcb81fd8-ab1d-4874-af23-35513d3d673d"),
                            CategoryId = new Guid("bee871ad-750b-400b-91b0-c34056c92297")
                        },
                        new
                        {
                            FeedId = new Guid("5ebb45a0-5fff-49ac-a5d5-691e6314ce71"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("5ebb45a0-5fff-49ac-a5d5-691e6314ce71"),
                            CategoryId = new Guid("7322b307-1431-4203-bda8-9161b60c45d0")
                        },
                        new
                        {
                            FeedId = new Guid("5ebb45a0-5fff-49ac-a5d5-691e6314ce71"),
                            CategoryId = new Guid("bee871ad-750b-400b-91b0-c34056c92297")
                        },
                        new
                        {
                            FeedId = new Guid("71a2df8c-cb34-4203-b045-375695439b8b"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("71a2df8c-cb34-4203-b045-375695439b8b"),
                            CategoryId = new Guid("2f07481d-5f3f-4bbf-923f-60e62fcfe4e7")
                        },
                        new
                        {
                            FeedId = new Guid("71a2df8c-cb34-4203-b045-375695439b8b"),
                            CategoryId = new Guid("7322b307-1431-4203-bda8-9161b60c45d0")
                        },
                        new
                        {
                            FeedId = new Guid("71a2df8c-cb34-4203-b045-375695439b8b"),
                            CategoryId = new Guid("bee871ad-750b-400b-91b0-c34056c92297")
                        },
                        new
                        {
                            FeedId = new Guid("5ebb45a0-5fff-49ac-a5d5-691e6314ce71"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        },
                        new
                        {
                            FeedId = new Guid("e2a825f2-1a5e-4b54-94dd-1544511349ab"),
                            CategoryId = new Guid("a5ae013c-14a1-4c2d-a731-47fbbd0ba527")
                        });
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Show", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FeedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FeedId")
                        .IsUnique();

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.UserSubmittedFeed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserSubmittedFeeds");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Episode", b =>
                {
                    b.HasOne("Podcast.Infrastructure.Data.Models.Show", "Show")
                        .WithMany("Episodes")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.FeedCategory", b =>
                {
                    b.HasOne("Podcast.Infrastructure.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Podcast.Infrastructure.Data.Models.Feed", null)
                        .WithMany("Categories")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Show", b =>
                {
                    b.HasOne("Podcast.Infrastructure.Data.Models.Feed", "Feed")
                        .WithOne("Show")
                        .HasForeignKey("Podcast.Infrastructure.Data.Models.Show", "FeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feed");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Feed", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Podcast.Infrastructure.Data.Models.Show", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
